version: '3.8'

services:
  # Backend Flask
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: conector_dropbox_backend
    # No exponemos el puerto 5000 directamente, lo haremos a través del proxy
    expose:
      - "5000"
    env_file:
      - ./backend/.env
    environment:
      - FLASK_ENV=production
      - FLASK_APP=app.py
      - DROPBOX_REDIRECT_URI=http://localhost/api/auth/callback
      - SECRET_KEY=default_secret_key_change_in_production
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      - FLASK_DEBUG=0
      - WERKZEUG_DEBUG_PIN=off
    volumes:
      - ./backend/sessions.json:/app/sessions.json
      - backend_data:/app/data
    networks:
      - dropbox_network
    restart: unless-stopped
    extra_hosts:
      - "conector_dropbox:host-gateway"  # Permite resolver conector_dropbox dentro del contenedor
      - "host.docker.internal:host-gateway"  # Permite acceder al host desde el contenedor
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/auth/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React/Vite
  frontend:
    build:
      context: ./App_Dropbox
      dockerfile: Dockerfile
    container_name: conector_dropbox_frontend
    expose:
      - "80"
    environment:
      - NODE_ENV=production
    networks:
      - dropbox_network
    restart: unless-stopped
    depends_on:
      - backend
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Permite acceder al host desde el contenedor

  # Proxy inverso Nginx
  proxy:
    image: nginx:alpine
    container_name: conector_dropbox_proxy
    ports:
      - "80:80"           # Puerto principal para la aplicación
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
      - frontend
    networks:
      - dropbox_network
    restart: unless-stopped

networks:
  dropbox_network:
    driver: bridge

volumes:
  backend_data:
    driver: local